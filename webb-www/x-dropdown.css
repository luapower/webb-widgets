
/* NOTE: the .x-input class is applied before this. */

.x-dropdown {
	/* layouting */
	align-items: stretch;

	/* sizing for inline use */
	padding: .25em;
	line-height: normal;

	/* styling */
	cursor: default;

	/* default mode: variable-width, no-wrap but with .x-input's min-width applied */
	width: auto;             /* shrink-wrap */
	white-space: nowrap;
}

.x-dropdown-value {
	flex: 1;                 /* stretch horizontally */
	height: 100%;
	padding-right: .25em;
}

.x-dropdown-button {
	align-self: center;
	padding-left : .35em;
	padding-right: .25em;
	border-left-style: inherit;
	border-left-color: inherit;
	border-left-width: 1px;
}

/* inline mode: variable-width, no-wrap with no min-width */
.x-dropdown.inline {
	min-width: 0;            /* reset from x-input's min-width */
}
.x-dropdown.inline .x-dropdown-value {
}

/* wrap mode: fixed-width, auto-wrap */
.x-dropdown.wrap {
	width: 0;                /* fixed width, constrained by x-input's min-width */
}
.x-dropdown.wrap .x-dropdown-value {
	white-space: normal;
}

/* fixed mode: fixed-width, no-wrap, hide-overflow */
.x-dropdown.fixed {
	width: 0;                /* fixed width, constrained by x-input's min-width */
}
.x-dropdown.fixed .x-dropdown-value {
	white-space: nowrap;
	overflow: hidden;
}

/* state styling ---------------------------------------------------------- */

.x-dropdown.open {
}

/* show as focused when the picker is focused */
.x-dropdown:focus-within {
	outline: none;
	background-color: #ffc;  /* same as x-input */
	box-shadow: 0 0 1px 1px #99f;
}

.x-dropdown .picker {
	box-sizing: border-box;
	position: absolute;
	border: 1px solid #999;
	background-color: inherit;
	box-shadow: 5px 5px 5px #000000aa;
	z-index: 1;
}
