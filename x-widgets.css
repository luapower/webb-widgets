
/* divs.js ---------------------------------------------------------------- */

[hidden] { display: none !important; } /* because css `display` overrides it! */

.popup { position: absolute !important; }

/* element disabled state ------------------------------------------------- */

[disabled] {
	opacity: .5;
	filter: grayscale();
}

[disabled],
[disabled] *
{
	cursor: default !important;
}

/* variables -------------------------------------------------------------- */

:root {

	--x-border-focused                :  #99d;
	--x-border-focused-button         :  #aab;
	--x-border-focused-button-primary :  #363;

	--x-shadow-focused                :  0px  0px  0px  1px var(--x-border-focused);
	--x-shadow-focused-button         :  0px  0px  0px  1px var(--x-border-focused-button);
	--x-shadow-focused-button-primary :  0px  0px  0px  1px var(--x-border-focused-button-primary);
	--x-shadow-popup                  :  2px  2px  2px      #000000aa; /* sharply angled shadow */
	--x-shadow-popup2                 :  0px  5px 10px  1px #00000044; /* large fuzzy shadow */
	--x-shadow-button                 :  0px  0px  8px  0px #00000011;
	--x-shadow-tooltip                :  2px  2px  9px      #00000044;
	--x-shadow-dialog                 :  2px  2px 10px      #00000088;
	--x-shadow-toolbox                :  1px  1px  4px      #000000aa;
	--x-shadow-slider-thumb           :  1px  1px  2px      #000000aa;
	--x-shadow-button-pressed         : inset 0 0.15em 0.3em #1b1f2333;

	--x-margin                      : .25em;
	--x-border-radius               : .25em;
	--x-padding-button              : .4em 1.2em;
	--x-padding-button-icon-side    : .4em;

	--x-input-min-height            : 3.4em;
	--x-input-width                 : 12em;
	--x-input-padding               : .25em .5em; /* padding for inputs and grid cells */
	--x-input-padding-x             : .5em;     /* x-padding for inputs and grid cells */
	--x-input-il-padding            : 1em .5em;
	--x-input-il-padding-value      : 1.6em .5em .4em .5em;
	--x-input-il-padding-value-top  : 1.6em;
	--x-input-il-padding-value-bottom : .4em;
	--x-input-il-padding-value-side : .5em;
	--x-input-il-padding-top-label  : .2em;
	--x-input-il-padding-top-label-animation-start : .6em;

	--x-fg              : #000;  /* text on normal backgrounds */
	--x-p               : #444;  /* multiline text on normal backgrounds */
	--x-fg-inverted     : #fff;  /* text on inverted backgrounds */
	--x-bg              : #fff;  /* bg for regions that need to be opaque */
	--x-bg-popup        : #fff;  /* bg for popups and inline grid editors */
	--x-fg-disabled     : #00000066;  /* faded text on light bg */
	--x-fg-disabled-inverted : #ffffff66;  /* faded text on dark colored bg with the same color as bg */
	--x-border-light    : #00000033;  /* normal borders */
	--x-smoke           : #00000022;  /* light overlays */
	--x-faint           : #00000011;  /* faint overlays and faint borders */
	--x-fg-label        : #666;  /* text of input & chart labels */
	--x-bg-new          : #eeeeff;
	--x-bg-modified     : #ddffdd;
	--x-bg-new-modified : #ccf0f0;
	--x-fg-search       : #000;  /* fg for quicksearch text */
	--x-bg-search       : #ff9;  /* bg for quicksearch text */
	--x-bg-info         : #069;  /* bg for info bubbles */
	--x-fg-error        : #a33;  /* bg for invalid inputs and error bubbles */
	--x-bg-error        : #a33;  /* bg for invalid inputs and error bubbles */
	--x-bg-tooltip      : #ffffcc; /* bg for cursor-kind tooltips */
	--x-bg-today        : #f33;

	--x-bg-button                 : #eff3f6;
	--x-bg-button-primary         : #28a745;
	--x-bg-button-primary-hover   : #199134;
	--x-bg-button-primary-pressed : #147a2b;

	--x-bg-select-button: var(--x-bg-button);

	--x-markbox-border-color-focus : #aaf;
	--x-markbox-icon-color: var(--x-item-bg-focused-selected);

	--x-toolbox-titlebar-bg         : var(--x-faint);
	--x-toolbox-titlebar-bg-focused : #00003333;

	--x-stroke-dialog-xbutton       : #00000066;

	--x-bg-pagelist-bar: #66f;

	--x-selected-widget-outline-color         : #666;
	--x-selected-widget-outline-color-focused : blue;

	/* these need to be opaque! */
	--x-item-bg-unfocused          : #999;
	--x-item-bg-focused            : #ddd;
	--x-item-bg-unfocused-selected : #333;
	--x-item-bg-focused-selected   : #258;
	--x-item-bg-focused-invalid    : #f33;
	--x-item-bg-unselected         : #888;
	--x-item-bg-selected           : #69c;
	--x-row-bg-focused             : #eee;

	--x-item-border-unfocused          : #9998;
	--x-item-border-focused            : #ddd8;
	--x-item-border-unfocused-selected : #3338;
	--x-item-border-focused-selected   : #2588;
	--x-item-border-focused-invalid    : #f338;
	--x-item-border-unselected         : #8888;
	--x-item-border-selected           : #69c8;
	--x-row-border-focused             : #eee8;

	--x-bg-grid-editor             : var(--x-bg-popup);

}

/* default fonts ---------------------------------------------------------- */

@font-face {
	font-family: "x-widget";
	src: url("/OpenSans-Regular.ttf");
}

@font-face {
	font-family: "x-widget";
	font-weight: bold;
	src: url("/OpenSans-SemiBold.ttf");
}

@font-face {
	font-family: "x-widget-condensed";
	src: url("/OpenSansCondensed-Light.ttf");
}

@font-face {
	font-family: "x-widget-condensed";
	font-weight: bold;
	src: url("/OpenSansCondensed-Bold.ttf");
}

/* body option: opensans */
body[opensans] {
	font-family: x-widget, Arial, sans-serif;
	font-size: 13px;
	line-height: 2;
}

/* widget defaults -------------------------------------------------------- */

.x-widget {
	display: inline-block;
}

.x-widget, .x-widget * {
	box-sizing: border-box;
}

.x-widget {
	z-index: 0; /* make `z-index` of children context-free */
	position: relative; /* make `position: absolute` of children context-free */
	margin: var(--x-margin);
	border: 1px solid var(--x-border-light);
	border-radius: var(--x-border-radius);
}

.x-widget:focus {
	outline: none;
}

.x-focusable:focus-within {
	border-color: var(--x-border-focused);
	box-shadow  : var(--x-shadow-focused);
}

.x-widget.popup {
	margin: 0;
}

.x-container {
	display: flex;
}

.x-stretched {
	place-self: stretch;
	flex: 1;
}

.x-container > .x-stretched,
body > .x-stretched:not(.popup)
{
	margin: 0;
	border-width: 0;
	border-radius: 0;
}

/* widget editing --------------------------------------------------------- */

.x-widget.x-widget.widget-editing {
	outline: 2px dotted red;
	outline-offset: -2px;
}

.x-widget [contenteditable] {
	outline: 0px solid transparent;
}

/* widget selecting ------------------------------------------------------- */

.x-widget.widget-selected {
	pointer-events: none;
}

.x-widget-selected-overlay {
	display: block;
	position: absolute;
	top: 0; left: 0; right: 0; bottom: 0;
	background-color: var(--x-smoke);
	outline: 2px dotted var(--x-selected-widget-outline-color);
	outline-offset: -2px;
	pointer-events: all;
	z-index: 10; /* arbitrary */
}

.x-widget-selected-overlay:focus {
	outline-color: var(--x-selected-widget-outline-color-focused);
}

/* item states ------------------------------------------------------------ */

.x-item.disabled { color: var(--x-fg-disabled); }
.x-item.disabled.focused { color: var(--x-fg-disabled-focused); }
.x-item.null      { color: var(--x-fg-disabled); }
.x-item.empty     { color: var(--x-fg-disabled); }
.x-item.removed   { text-decoration: line-through; }

.x-item.invalid {
	background-color: var(--x-bg-error);
	color: var(--x-fg-inverted);
}

.x-item:not(.focused):not(.selected):not(.invalid).new {
	background-color: var(--x-bg-new);
}

.x-item:not(.focused):not(.selected):not(.invalid):not(.new).modified {
	background-color: var(--x-bg-modified);
}

.x-item:not(.focused):not(.selected):not(.invalid).new.modified {
	background-color: var(--x-bg-new-modified);
}

.x-focusable-items .x-item:not(.focused).selected:not(.invalid) {
	border-color: var(--x-item-border-unselected);
	background-color: var(--x-item-bg-unselected);
	color: var(--x-fg-inverted);
}

.x-focusable-items:focus-within .x-item.selected:not(.invalid) {
	border-color: var(--x-item-border-selected);
	background-color: var(--x-item-bg-selected);
	color: var(--x-fg-inverted);
}

.x-item.row-focused:not(.selected):not(.invalid) {
	border-color: var(--x-row-border-focused);
	background-color: var(--x-row-bg-focused);
}

.x-focusable-items .x-item.focused:not(.invalid) {
	border-color: var(--x-item-border-unfocused);
	background-color: var(--x-item-bg-unfocused);
}

.x-focusable-items:focus-within .x-item.focused:not(.invalid) {
	border-color: var(--x-item-border-focused);
	background-color: var(--x-item-bg-focused);
}

.x-focusable-items .x-item.focused.selected:not(.invalid) {
	border-color: var(--x-item-border-unfocused-selected);
	background-color: var(--x-item-bg-unfocused-selected);
	color: var(--x-fg-inverted);
}

.x-focusable-items:focus-within .x-item.focused.selected:not(.invalid) {
	border-color: var(--x-item-border-focused-selected);
	background-color: var(--x-item-bg-focused-selected);
}

.x-focusable-items:focus-within .x-item.focused.invalid {
	border-color: var(--x-item-border-focused-invalid);
	background-color: var(--x-item-bg-focused-invalid);
}

/* scrollbars ------------------------------------------------------------- */

/*
NOTE: scrollbar width and/or height must be set in order to enable custom scrollbars.
Only setting custom scrollbars for the dark theme as it's the only way to darken them.
*/
.x-widget::-webkit-scrollbar-track,
.x-widget ::-webkit-scrollbar-track
{
	background-color: var(--x-faint);
}

.x-widget::-webkit-scrollbar-thumb,
.x-widget ::-webkit-scrollbar-thumb
{
	background-color: var(--x-smoke);
	border-color: var(--x-smoke);
}

/* border-based triangle shapes ------------------------------------------- */

.x-arrow {
	border-width: .5em;
	border-style: solid;
}

.x-arrow[side=top],
.x-arrow[side=top]:hover {
	border-right-color : transparent;
	border-left-color  : transparent;
	border-bottom-color: transparent;
	margin-left: -.5em;
}

.x-arrow[side=bottom],
.x-arrow[side=bottom]:hover {
	border-right-color : transparent;
	border-left-color  : transparent;
	border-top-color   : transparent;
	margin-left: -.5em;
}

.x-arrow[side=left],
.x-arrow[side=left]:hover {
	border-right-color : transparent;
	border-top-color   : transparent;
	border-bottom-color: transparent;
	margin-top: -.5em;
}

.x-arrow[side=right],
.x-arrow[side=right]:hover {
	border-left-color  : transparent;
	border-top-color   : transparent;
	border-bottom-color: transparent;
	margin-top: -.5em;
}

/* button ----------------------------------------------------------------- */

.x-button {

	/* positioning for inline use */
	display: inline-flex;    /* more options than inline, but no collapsible margins! */

	/* layout content */
	align-items: baseline;   /* required */
	justify-content: center;

	/* sizing for inline use */
	padding: var(--x-padding-button);
	font-weight: bold;
	line-height: normal;

	/* behavior */
	user-select: none;
	cursor: pointer;
}

.x-button.widget-editing {
	cursor: initial;
}

.x-widget.widget-editing.x-button {
	outline-offset: -2px;
}

.x-button.empty { /* icon-only */
	padding-left : var(--x-padding-button-icon-side);
	padding-right: var(--x-padding-button-icon-side);
}

.x-button:not(.empty) > .x-button-icon {
	margin-right: .5em;
}

/* styling (from github) */

.x-button {
	border: 1px solid var(--x-faint);
	background-color: var(--x-bg-button);
}

.x-button {
	box-shadow: var(--x-shadow-button);
}

.x-button[primary] {
	background-color: var(--x-bg-button-primary);
	color: var(--x-fg-inverted);
}

.x-button:focus {
	border-color: var(--x-border-focused-button);
	box-shadow  : var(--x-shadow-focused-button), var(--x-shadow-button);
}

.x-button[primary]:focus {
	border-color: var(--x-border-focused-button-primary);
	box-shadow  : var(--x-shadow-focused-button-primary), var(--x-shadow-button);
}

.x-button:not([disabled]):not(.widget-editing):not(.widget-selected):hover {
	filter: brightness(95%);
}

.x-button:not([disabled]):not(.widget-editing):not(.widget-selected):active,
.x-button:not([disabled]):not(.widget-editing):not(.widget-selected).active {
	filter: brightness(90%);
	box-shadow: var(--x-shadow-button-pressed);
}

/* bare buttons (no borders) */

.x-button[bare] {
	border-width: 0;
	background: none;
	box-shadow: none;
	border-radius: 0;
}

.x-button[bare]:not([disabled]):not(.widget-editing):not(.widget-selected):hover {
	filter: contrast(.7);
}

.x-button[bare]:not([disabled]):not(.widget-editing):not(.widget-selected):active,
.x-button[bare]:not([disabled]):not(.widget-editing):not(.widget-selected).active
{
	box-shadow: none;
	filter: contrast(.4);
}

/* action band ------------------------------------------------------------ */

.x-action-band {
	margin: 0;
	border: 0;
	border-radius: 0;
	display: flex;
	justify-content: flex-end;
}

/* tooltip ---------------------------------------------------------------- */

.x-tooltip {

	/* positioning */
	z-index: 2; /* menu = 4, picker = 3, tooltip = 2, toolbox = 1 */

	/* sizing */
	max-width: 400px;  /* max. width of the message bubble before wrapping */

	/* layout content */
	display: flex;
	align-items: flex-start;
	justify-content: flex-start;
	overflow: visible; /* for the tip */

	/* styling */
	border: 0; /* container */
	border-radius: 0;

	/* animation */
	opacity: 0;
	animation-duration: .2s;
	animation-timing-function: ease-out;
	animation-fill-mode: forwards;

	/* behavior */
	user-select: none;
}

.x-tooltip-body {
	display: inline-flex;
	padding: .5em 0;

	/* styling */
	border-radius: var(--x-border-radius);
	background-color: var(--x-bg-popup);
	box-shadow: var(--x-shadow-tooltip);
	line-height: 1.5em;
}

/* visibility animation */

.x-tooltip.visible {
	opacity: 1;
}

@keyframes x-tooltip-left   { from { opacity: 0; transform: translate(-1em, 0); } }
@keyframes x-tooltip-right  { from { opacity: 0; transform: translate( 1em, 0); } }
@keyframes x-tooltip-top    { from { opacity: 0; transform: translate(0, -.5em); } }
@keyframes x-tooltip-bottom { from { opacity: 0; transform: translate(0,  .5em); } }

.x-tooltip.visible[side=left]   { animation-name: x-tooltip-left; }
.x-tooltip.visible[side=right]  { animation-name: x-tooltip-right; }
.x-tooltip.visible[side=top]    { animation-name: x-tooltip-top; }
.x-tooltip.visible[side=bottom] { animation-name: x-tooltip-bottom; }

.x-tooltip-content {
	/* layouting */
	display: inline-block; /* shrink-wrap and also word-wrap when reaching container width */
	padding: 0 1em;
}

.x-tooltip-xbutton {
	vertical-align: top;
	align-self: stretch;
	font-size: 80%;
	color: var(--x-fg-disabled);
	padding: .25em 1em;
	border: 0 solid transparent;
	border-left-width: 1px;
	border-color: var(--x-faint);
	pointer-events: all;
}

.x-tooltip-xbutton:hover {
	color: inherit;
}

.x-tooltip-tip {

	/* border-based triangle shape */
	display: block;
	box-sizing: content-box;
	border: .5em solid transparent;
	z-index: 1; /* draw over the parent's box shadow */

	/* styling */
	color: var(--x-bg-popup);
}

.x-tooltip-icon {
	vertical-align: top;
	margin: .2em 0 0 1em;
	font-size: 1em;
	line-height: inherit !important; /* override fontawesome's !important */
}

.x-tooltip[side=left]   > .x-tooltip-tip { border-left-color   : inherit; }
.x-tooltip[side=right]  > .x-tooltip-tip { border-right-color  : inherit; }
.x-tooltip[side=top]    > .x-tooltip-tip { border-top-color    : inherit; }
.x-tooltip[side=bottom] > .x-tooltip-tip { border-bottom-color : inherit; }

/* side & align combinations */

.x-tooltip[side=top],
.x-tooltip[side=bottom]  { flex-flow: column; }

.x-tooltip[side=left]    { justify-content: flex-end; }

.x-tooltip[align=end]    { align-items: flex-end; }
.x-tooltip[align=center] { align-items: center; }

.x-tooltip[side=right]  > .x-tooltip-body,
.x-tooltip[side=bottom] > .x-tooltip-body { order: 2; }

.x-tooltip[side=top][align=center] > .x-tooltip-body > .x-tooltip-content,
.x-tooltip[side=bottom][align=center] > .x-tooltip-body > .x-tooltip-content { text-align: center; }

.x-tooltip[side=top][align=end] > .x-tooltip-body > .x-tooltip-content,
.x-tooltip[side=bottom][align=end] > .x-tooltip-body > .x-tooltip-content { text-align: right; }

.x-tooltip[side=top] > .x-tooltip-tip,
.x-tooltip[side=bottom] > .x-tooltip-tip { margin: 0 .5em; }

.x-tooltip[side=left] > .x-tooltip-tip,
.x-tooltip[side=right] > .x-tooltip-tip { margin: .5em 0; }

.x-tooltip[side=right]  { margin-left   : -.25em; }
.x-tooltip[side=left]   { margin-left   :  .25em; }
.x-tooltip[side=top]    { margin-top    :  .25em; }
.x-tooltip[side=bottom] { margin-top    : -.25em; }

/* styling based on kind attr */

.x-tooltip[kind=search] > .x-tooltip-body { background-color: var(--x-bg-search); color: #000; }
.x-tooltip[kind=search] > .x-tooltip-tip { color: var(--x-bg-search); }

.x-tooltip[kind=info] > .x-tooltip-body { background-color: var(--x-bg-info); color: var(--x-fg-inverted); }
.x-tooltip[kind=info] > .x-tooltip-tip { color: var(--x-bg-info); }
.x-tooltip[kind=info] > .x-tooltip-body > .x-tooltip-xbutton { color: var(--x-fg-disabled-inverted); border-color: var(--x-fg-disabled-inverted); }
.x-tooltip[kind=info] > .x-tooltip-body > .x-tooltip-xbutton:hover { color: var(--x-fg-inverted); }

.x-tooltip[kind=error] > .x-tooltip-body { background-color: var(--x-bg-error); color: var(--x-fg-inverted); }
.x-tooltip[kind=error] > .x-tooltip-tip { color: var(--x-bg-error); }
.x-tooltip[kind=error] > .x-tooltip-body > .x-tooltip-xbutton { color: var(--x-fg-disabled-inverted); border-color: var(--x-fg-disabled-inverted); }
.x-tooltip[kind=error] > .x-tooltip-body > .x-tooltip-xbutton:hover { color: var(--x-fg-inverted); }

.x-tooltip[kind=cursor] {
	margin-left: .75em;
	margin-top : .75em;
}

.x-tooltip[kind=cursor] > .x-tooltip-body {
	padding: .15em 0;
	border: 1px solid #aaaa99;
	color: #333;
	background-color: var(--x-bg-tooltip);
	font-family: sans-serif;
	font-size: 12px;
	border-radius: 0;
}

.x-tooltip[kind=cursor] > .x-tooltip-body > .x-tooltip-content {
	padding: 0 .5em;
	white-space: pre !important;
}

.x-tooltip[kind=cursor] > .x-tooltip-tip { display: none; }

/* checkbox --------------------------------------------------------------- */

.x-markbox {

	/* layout self: baseline-align in an inline context */
	display: inline-flex;

	/* layout content */
	align-items: center;
	flex-flow: row nowrap;
	overflow: hidden;

	/* styling */
	border: 1px dashed transparent;
	border-radius: 0;
	cursor: pointer;
}

.x-markbox:hover {
	filter: contrast(60%);
}

.x-markbox.with-label {
	padding: var(--x-input-il-padding-value);
	line-height: initial;
	min-height: var(--x-input-min-height);    /* for alignment with x-editbox */
	align-items: baseline;
}

.x-markbox.with-label > .x-markbox-label {
	display: block;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

.x-markbox.no-field > .x-markbox-label { flex: 1; }

.x-markbox:focus-within {
	border-color: var(--x-markbox-border-color-focus);
}

.x-markbox:focus.invalid {
	border-color: var(--x-fg-error);
}

.x-markbox-icon {
	color: var(--x-markbox-icon-color);
	font-size: 120%;
}

.x-markbox.invalid > .x-markbox-label,
.x-markbox.invalid > .x-markbox-icon {
	color: var(--x-fg-error);
}

.x-markbox[align=right] > .x-markbox-icon {
	order: 2;
}
.x-markbox[align=right] > .x-markbox-label {
	text-align: right;
}

.x-markbox[align=left ] > .x-markbox-label { padding-left : .5em; }
.x-markbox[align=right] > .x-markbox-label { padding-right: .5em; }

.x-markbox[button_style=toggle] > .x-markbox-label { flex: 1; }
.x-markbox[button_style=toggle] > .x-markbox-icon  { order: 2; }
.x-markbox[button_style=toggle] > .x-markbox-label { padding-left: 0; padding-right: .5em; }

.x-markbox.grid-editor { justify-content: center; }

/* checkbox --------------------------------------------------------------- */

.x-checkbox-label {
	display: none;
}

/* radiogroup ------------------------------------------------------------- */

.x-radiogroup {
	display: inline-flex;
	flex-flow: column wrap;
	margin: 0;
	border: 0;
	border-radius: 0;
}

.x-radio-item {
	align-items: baseline;
	margin-left: 0;
	margin-right: 0;
	margin: 0;
	padding: 0 var(--x-input-il-padding-value-side);
}

.x-radiogroup.invalid > .x-markbox,
.x-radiogroup.invalid > .x-markbox > .x-radio-icon
{
	color: var(--x-fg-error);
}

.x-radiogroup.invalid > .x-markbox:focus {
	border-color: var(--x-fg-error);
}

.x-radiogroup[align=right] > .x-markbox {
	justify-content: flex-end;
}

/* editbox ---------------------------------------------------------------- */

.x-editbox {

	/* self sizing */
	width: var(--x-input-width);

	/* layout content */
	display: inline-flex;    /* the only way to get variable-width inputs */
	align-items: baseline;   /* ...that are baseline-aligned */
	overflow: hidden;        /* label can overflow */

	/* sizing for inline use */
	padding: 0;              /* set from code */

}

.x-input-placeholder {
	width: 100%;
	height: 1em;
	background-color: var(--x-smoke);
}

.x-flex > .x-editbox,
.x-flex > .x-input > .x-editbox
{
	width: auto;
	min-width: 0;
}

.x-editbox-input {
	/* defaults */
	margin: 0;
	border: 0;
	padding: var(--x-input-padding);
	font-size: inherit;
	font-family: inherit;
	height: 100%;            /* stretch vertically */
	width: 100%;             /* stretch horizontally */
	min-width: 0;            /* Firefox fix */
	color: inherit;
	background: none;
	text-align: left;
}

.x-editbox-input:focus {
	outline: none;
}

.x-editbox[align=right] > .x-editbox-input {
	text-align: right;
}

.x-editbox.modified.modified { /* specificity over .x-widget.grid-editor */
	/* background-color: var(--x-bg-modified); */
}

.x-editbox.invalid.invalid { /* specificity over .x-widget.grid-editor */
	background-color: var(--x-bg-error);
	color: var(--x-fg-inverted);
}

/* editbox with animated inner label/placeholder -------------------------- */

.x-editbox.with-label {
	line-height: initial;    /* prevent inheriting it */
	min-height: var(--x-input-min-height);  /* because line-height doesn't work on <input> */
}

.x-editbox.with-label[mode=inline] {
	border-radius: 0;
}

.x-editbox.with-label > .x-editbox-input {
	padding: var(--x-input-il-padding);
}

.x-editbox-label {
	vertical-align: top;
	align-self: flex-start;
	position: absolute;
	padding: var(--x-input-il-padding);
	pointer-events: none;       /* click-through */
	color: var(--x-fg-label);
	white-space: nowrap;
	visibility: hidden;
}

.x-editbox.invalid > .x-editbox-label {
	color: var(--x-fg-inverted);
}

.x-editbox:not(.with-label) > .x-editbox-label {
	display: none;
}

.x-editbox.with-label > .x-editbox-label {
	visibility: visible;
}

.x-editbox.with-label > .x-editbox-input:not(.empty) {
	top: 0; /* fixate to top so we only have to set the top padding */
	padding: var(--x-input-il-padding-value);
}

.x-editbox[mode=inline] {
	border: 0;
	border-radius: 0;
}

.x-editbox[mode=inline] {
	border-bottom: 1px dashed black;
}

.x-editbox[mode=inline] > .x-editbox-input {
	padding-bottom: .1em;
}

.x-editbox[mode=inline]:focus-within {
	box-shadow: none;
}

.x-editbox[mode=inline].with-label > .x-editbox-input:not(.empty) {
	padding-bottom: .1em;
}

.x-editbox.with-label > .x-editbox-label:not(.empty) {
	top: 0; /* fixate to top so we only have to set the top padding */
	user-select: none;
	font-size: 85%;
	padding-top: var(--x-input-il-padding-top-label);
	animation: x-editbox-label-focused .2s;
}

.x-editbox[mode=inline].with-label > .x-editbox-label:not(.empty) {
	font-weight: bold;
	opacity: .5;
}

@keyframes x-editbox-label-focused {
	from {
		opacity: 0;
		padding-top: var(--x-input-il-padding-top-label-animation-start);
	}
}

.x-button.x-editbox-copy-to-clipboard-button {
	margin: 0;
	padding: 0 .5em;
	border-left: 1px solid var(--x-smoke);
	border-radius: 0;
}

.x-editbox-copy-to-clipboard-button > .x-button-icon > img {
	filter: contrast(.8);
}

/* passedit --------------------------------------------------------------- */

.x-passedit-eye-icon {
	margin: 0;
}

/* spinedit --------------------------------------------------------------- */

.x-spinedit-button {
	border-style: solid;
	border-color: var(--x-border-light);
	border-width: 0;
	padding-left : var(--x-input-padding-x);
	padding-right: var(--x-input-padding-x);
}

.x-spinedit-button.left  { border-right-width: 1px; }
.x-spinedit-button.right { border-left-width : 1px; }

.x-spinedit-button.fa-plus,
.x-spinedit-button.fa-minus {
	font-size: 70%;
	align-self: center;
}
.x-spinedit-button.fa-minus.leftmost { padding-left  : calc(1.428 * var(--x-input-padding-x)); }
.x-spinedit-button.fa-plus.rightmost { padding-right : calc(1.428 * var(--x-input-padding-x)); }

.x-spinedit-button.fa-caret-left  { padding-right : calc(.5 * var(--x-input-padding-x)); }
.x-spinedit-button.fa-caret-right { padding-left  : calc(.5 * var(--x-input-padding-x)); }

/* inner label adjustments */

.x-spinedit[button_placement=left]      > .x-editbox-label.empty,
.x-spinedit[button_placement=each-side] > .x-editbox-label.empty {
	padding-left: 2em;
}

.x-spinedit[button_style=left-right][button_placement=left]      > .x-editbox-label.empty,
.x-spinedit[button_style=left-right][button_placement=each-side] > .x-editbox-label.empty {
	padding-left: 1.5em;
}

.x-spinedit.with-label > .x-spinedit-button.fa-plus,
.x-spinedit.with-label > .x-spinedit-button.fa-minus {
	align-self: baseline;
}

/* slider ----------------------------------------------------------------- */

.x-slider {
	/* inline layouting */
	display: inline-block;
	vertical-align: middle;
	margin: .75em;

	/* sizing */
	width: var(--x-input-width);
	height: 7px;

	/* styling */
	background-color: var(--x-smoke);
	border: 0;
	border-radius: 10em;

	/* layouting content */
	overflow: visible;
}

.x-flex > .x-slider,
.x-flex > .x-input > .x-slider,
{
	width: auto;
	min-width: 1em;
}

.x-slider-fill {
	position: absolute;
	height: 100%;
	background-color: var(--x-item-bg-unfocused);
	border-radius: 10em;
}

.x-slider-range-fill {
	background-color: var(--x-fg-disabled);
}

.x-slider-thumb {

	/* center vertically to track */
	position: absolute;
	top: 50%;
	transform: translateX(-50%) translateY(-55%);

	/* sizing */
	width: 1em;
	height: 1em;

	/* styling */
	background-color: var(--x-smoke);
	border: 1px solid var(--x-border-light);
	box-shadow: var(--x-shadow-slider-thumb);
	border-radius: 10em;

}

.x-slider-value-thumb.different {
	opacity: .5;
}

.x-slider:focus > .x-slider-value-fill {
	background-color: var(--x-item-bg-focused);
}

.x-slider:focus > .x-slider-thumb {
	border: 1px solid var(--x-item-bg-focused);
	background-color: var(--x-smoke);
}

.x-slider.invalid > .x-slider-input-thumb {
	border: 1px solid var(--x-bg-error);
	background-color: var(--x-bg-error);
}

.x-slider.invalid:focus > .x-slider-thumb {
	border: 1px solid var(--x-disabled);
}

.x-slider.animated > .x-slider-thumb      { transition: left  .1s; }
.x-slider.animated > .x-slider-value-fill { transition: width .1s; }

/* dropdown --------------------------------------------------------------- */

/* NOTE: .x-editbox is applied too on dropdowns so consider this a class extension! */

.x-dropdown {

	/* layout content */
	align-items: center;
	line-height: initial;       /* prevent y-stretching to surrounding text's line height */

	/* styling */
	cursor: default;

	/* default mode: variable-width, no-wrap but with .x-editbox's min-width applied */
	width: auto;                /* shrink-wrap */
	min-width: var(--x-input-width);
	white-space: nowrap;
}

/* look focused even though it's the picker that's focused. */
.x-dropdown.open {
	border-color : var(--x-border-focused);
	box-shadow   : var(--x-shadow-popup2), var(--x-shadow-focused);
}

.x-dropdown-value {

	/* layout self */
	flex: 1;                 /* stretch horizontally */
	width: auto;
	padding: var(--x-input-padding);
	padding-right : .25em;
	padding-left  : var(--x-input-padding-x);

	/* layout content */
	display: flex;
	align-items: center;
}

.x-dropdown-value.null { color: var(--x-fg-disabled); }

.x-dropdown-button {
	padding-left : var(--x-input-padding-x);
	padding-right: var(--x-input-padding-x);

	border-left-style: inherit;
	border-left-color: inherit;
	border-left-width: 1px;
}

/* if you want that hipster animation, here it is...
.x-dropdown-button.down {
	transition: transform .2s ease;
}

.x-dropdown-button.up {
	transition: transform .2s ease;
	transform: rotate(180deg);
}
*/

.x-dropdown.with-label > .x-dropdown-button {
	margin-top: var(--x-input-il-padding-value-top); /* for alignment with the text */
}

.x-dropdown-more-button {
	margin-left         : calc(0px - var(--x-input-padding-x));
	padding-left        : var(--x-input-padding-x);
	padding-right       : var(--x-input-padding-x);
	align-self: stretch;
	display: flex;
	align-items: center;
	font-size: 90%;
}

.x-dropdown-more-button:active {
	color: var(--x-fg-disabled);
}

.x-dropdown[align=right] > .x-dropdown-value {
	order: 2;
	padding-left  : .25em;
	padding-right : var(--x-input-padding-x);

	justify-content: flex-end;
}

/* inline mode: variable-width, no-wrap with no min-width */
.x-dropdown[mode=inline] {
	min-width: 0;            /* reset from x-input's min-width */
	align-items: baseline;
}

.x-dropdown[mode=inline]:focus,
.x-dropdown[mode=inline].open {
	box-shadow: none;
}

/* wrap mode: fixed-width, auto-wrap */
.x-dropdown[mode=wrap] {
	width: 0;                /* fixed width, constrained by x-input's min-width */
}
.x-dropdown[mode=wrap] > .x-dropdown-value {
	white-space: normal;
}

/* fixed mode: fixed-width, no-wrap, hide-overflow */
.x-dropdown[mode=fixed] {
	width: 0;                /* fixed width, constrained by x-input's min-width */
}

.x-dropdown[mode=fixed] > .x-dropdown-value,
.x-flex > .x-dropdown > .x-dropdown-value,
.x-flex > .x-input > .x-dropdown > .x-dropdown-value
{
	white-space: nowrap;
	overflow: hidden;
}

/* override with more specificity: .x-widget.x-<foo>.picker */
.x-widget.picker {
	background-color: var(--x-bg-popup);
	z-index: 3; /* menu = 4, picker = 3, tooltip = 2, toolbox = 1 */

	border-color: var(--x-border-focused);
	box-shadow  : var(--x-shadow-popup2), var(--x-shadow-focused);
}

/* tagsedit --------------------------------------------------------------- */

.x-tagsedit {

	/* layout content */
	display: flex;
	flex-flow: wrap;
	align-items: baseline;
	align-content: flex-start;
	overflow: hidden;

	padding-left : var(--x-input-il-padding-value-side);
	padding-right: var(--x-input-il-padding-value-side);
}

/* avoiding !important because the web is a piece of shit. */
.x-tagsedit-input.x-tagsedit-input.x-tagsedit-input.x-tagsedit-input {
	min-width: 0;
	width: 3em;
	padding: 2px calc(.25em + 2px); /* reset */
	height: auto;                   /* reset */
	flex: 1 1 auto;
	line-height: 1;
}

.x-tagsedit-label {
	padding: 0;
}

.x-tagsedit.with-label {
	padding-top   : calc(var(--x-input-il-padding-value-top   ) - 2px);
	padding-bottom: calc(var(--x-input-il-padding-value-bottom) - 2px);
}

.x-tagsedit-button-expand {
	padding: 0 .25em;
}

.x-tagsedit-bubble {
	pointer-events: all;
}

.x-tagsedit-tag {
	display: inline;
	border: 1px solid var(--x-border-light);
	border-radius: .25em;
	background-color: var(--x-faint);
	padding: 2px .25em;
	padding-top: 3px;
	margin: 1px .1em;
	line-height: 1;
	cursor: default;
	overflow: hidden;
}

.x-tagsedit-tag-xbutton {
	padding-left: .4em;
	padding-right: .2em;
	font-size: 70%;
	align-self: center;
	color: var(--x-fg-disabled);
}

.x-tagsedit.invalid > .x-tagsedit-tag {
	background-color: var(--x-item-bg-focused-invalid);
}

.x-tagsedit.invalid > .x-tagsedit-tag > .x-tagsedit-tag-xbutton {
	color: var(--x-fg-disabled-inverted);
}

.x-tagsedit-tag:hover {
	cursor: pointer;
	background-color: var(--x-smoke);
}

.x-tagsedit-tag:hover > .x-tagsedit-tag-xbutton {
	color: inherit;
}

.x-tagsedit.invalid > .x-tagsedit-tag:hover > .x-tagsedit-tag-xbutton {
	color: var(--x-fg-inverted);
}

/* fixed height mode */

.x-tagsedit.with-label[mode=fixed] {
	//min-height: var(--x-input-min-height);
}

.x-tagsedit[mode=fixed] {
	flex-flow: nowrap;
}

.x-tagsedit[mode=fixed] > .x-tagsedit-tag,
.x-tagsedit-bubble .x-tagsedit-tag
{
	flex-flow: nowrap;
	white-space: nowrap;
}

/* `place` type formatting (also used in the address widget) -------------- */

.x-place-pin {
	margin-right: .5em;
	cursor: pointer;
}

.x-place-pin.disabled {
	opacity: .3;
	cursor: default;
}

/* google maps ------------------------------------------------------------ */

.x-googlemaps {

	/* layout self */
	min-height: calc(var(--x-input-min-height) * 2 + var(--x-margin));

	/* layout map icon */
	display: flex !important; /* override fontawesome !important */
	justify-content: center;
	align-items: center;
	color: var(--x-smoke);

	/* styling */
	background-color: var(--x-faint);
}

.x-googlemaps::before {
	font-size: 2em !important; /* override fontawesome !important */
}

.x-googlemaps-iframe {
	position: absolute;
	min-width: 0;
	min-height: 0;
	width: 100%;
	height: 100%;
}

/* input ------------------------------------------------------------------ */

.x-input {
	display: flex;
	align-self: stretch;
}

.x-input:not(:empty) {
	margin: 0;
	border: 0;
	border-radius: 0;
}

.x-flex > .x-input {
	min-width: 0;
	width: auto;
}

/* listbox ---------------------------------------------------------------- */

.x-listbox {
	/* layout content */
	display: inline-flex;        /* the only way for it to shrink-wrap */
	flex-wrap: nowrap;
	line-height: initial;  /* prevent inheriting it */
	border-radius: 0;
}

.x-listbox:not(.picker) {
	border: 0;
}

.x-listbox[orientation=vertical]   { flex-direction: column; }
.x-listbox[orientation=horizontal] { flex-direction: row; }

.x-listbox-item {
	/* layout */
	display: block;
	/* sizing */
	padding: var(--x-input-padding);
	/* behavior */
	cursor: default;
	position: relative; /* for item moving */
}

.x-item.x-listbox-item { /* specificity over ?? */
	overflow: visible;
}

.x-listbox-item.moving {
	z-index: 1;
	opacity: .7;
}

.x-listbox.moving > .x-listbox-item:not(.moving) {
	transition: top .1s, left .1s, right .1s;
}

.x-widget.x-listbox.picker {
	max-height: 300px;
	overflow: auto;
	resize: both;
}

/* select-button ---------------------------------------------------------- */

.x-select-button {
	border: 0;
}

.x-select-button > .x-item {

	/* styling */
	background-color: var(--x-bg-select-button);
	border: 1px solid var(--x-border-light);

	/* behavior */
	user-select: none;
}

.x-select-button > .x-item:hover {
	background-color: var(--x-smoke);
}

.x-select-button > .x-item.focused.selected {
	box-shadow: var(--x-shadow-button-pressed);
}

.x-select-button > .x-item:first-child {
	border-top-left-radius    : var(--x-border-radius);
	border-bottom-left-radius : var(--x-border-radius);
}

.x-select-button > .x-item:last-child {
	border-top-right-radius    : var(--x-border-radius);
	border-bottom-right-radius : var(--x-border-radius);
}

.x-select-button > .x-item:not(:first-child) {
	border-left: 0;
}

/* colors listbox --------------------------------------------------------- */

.x-item-color {
	width: 100%;
}

/* calendar --------------------------------------------------------------- */

.x-calendar {
	display: inline-block;
	padding: 1em;
}

.x-calendar-weekday {
	color: var(--x-fg-disabled);
	font-weight: normal;
}

.x-calendar:focus .x-calendar-day.focused {
	box-shadow: var(--x-shadow-focused);
}

.x-calendar-day,
.x-calendar-weekday {
	text-align: right;
}
.x-calendar-day {
	padding: .4em;
	padding-left : .6em;
	padding-right: .6em;
}
.x-calendar-weekday {
	padding: .4em 0;
}

.x-calendar-day                          { cursor: default; }
.x-calendar-day:not(.current-month)      { color: var(--x-fg-disabled); }
.x-calendar-day.today                    { background-color: var(--x-bg-today); color: var(--x-fg-inverted); }
.x-calendar .x-calendar-day.today:hover  { background-color: var(--x-bg-today); }
.x-calendar.invalid .x-calendar-day.focused {
	background-color: var(--x-bg-error);
}

.x-calendar-header {
	display: flex;
	align-items: center;     /* vertical align */
}

.x-calendar-sel-day {
	font-size: 300%;
}

.x-calendar-sel-day-suffix {
	flex: 1;                 /* stretch to fill width */
	font-size: 150%;
	padding-left: .1em;
	padding-top: .25em;
	align-self: flex-start;
}

.x-calendar-sel-month.x-editbox,
.x-calendar-sel-year.x-editbox {
	border: 0;
}

.x-calendar-sel-month.x-editbox {
	min-width: 4.5em;        /* limit shrinking */
}

.x-editbox.x-calendar-sel-month .x-listbox {
	width: 100%;
}

.x-editbox.x-calendar-sel-year {
	width: 6.5em;
}

/* calendar as picker ----------------------------------------------------- */

.x-widget.x-calendar.picker {
	padding: 1.5em;
}
.x-widget.x-calendar.picker .x-calendar-sel-day {
	font-size: 200%;
}
.x-widget.x-calendar.picker .x-calendar-day {
	padding-top: 0em;
	padding-bottom: 0em;
	padding-left : .5em;
	padding-right: .5em;
}

/* menu ------------------------------------------------------------------- */

.x-menu {

	--font-family: arial, x-widget, sans-serif;
	--font-size: 12px;
	--line-height: 1.5;
	font-family : var(--font-family );
	font-size   : var(--font-size   );
	line-height : var(--line-height );

	/* layout self */
	position: absolute; /* submenus are positioned in code */
	top: 0;
	left: 0;
	margin: 0;
	min-width: 200px;
	width: min-content; /* why the fuck is `width: 0` not working here? */
	z-index: 4; /* menu = 4, picker = 3, tooltip = 2, toolbox = 1 */

	/* layout content */
	display: table;
	overflow: visible;  /* submenus are outside clipping area */
	border-collapse: collapse; /* separators are done with borders */
	background-color: var(--x-bg-popup);

	/* styling */
	border: 0;
	border-radius: 0;
	color: inherit;
	color: var(--x-fg); /* prevent inheritance by the .focused rule below */

}

.x-menu.popup {
	/* avoid using !important unless it's displayed as a popup */
	font-family : var(--font-family ) !important;
	font-size   : var(--font-size   ) !important;
	line-height : var(--line-height ) !important;
}

.x-menu, .x-menu:focus-within {
	outline: 1px solid var(--x-border-light);
	outline-offset: -1px;
	box-shadow: var(--x-shadow-popup);
}

.x-menu-sub-td {
	position: relative; /* submenus are anchored to this td */
}

.x-menu-tr.focused > :not(.x-menu-table) {
	// alternative (sleeker but less accessible): background-color: var(--x-faint);
	background-color: var(--x-item-bg-unfocused-selected);
	color: var(--x-fg-inverted);
}

.x-menu:focus-within .x-menu-tr.focused > :not(.x-menu-table) {
	background-color: var(--x-item-bg-focused-selected);
}

.x-menu-tr > td {
	padding: .4em;
}

.x-menu-tr > td:first-child {
	padding-left: .9em;
}

.x-menu-separator {
	height: 1em;
}

.x-menu-heading {
	padding-left: 1em;
	font-weight: bold;
	color: var(--x-fg-disabled);
	cursor: default;
	padding-top   : .5em;
	padding-bottom: .5em;
}

.x-menu-separator > hr {
	border: 0;
	border-top: 1px solid var(--x-border-light);
}

.x-menu-title-td {
	padding: 0;
	width: 100%;
	padding-left: 0;
	overflow: hidden;
	white-space: nowrap;
}

.x-menu-tr.focused > td {
	cursor: default;
}

/* widget placeholder ----------------------------------------------------- */

.x-widget-placeholder {
	display: grid;
	justify-content: safe center;
	align-content: center;
	outline: 1px dashed var(--x-smoke);
	outline-offset: -1px;
}

.x-widget-placeholder-button {
	margin: 1px;
	padding: .1em;
	min-width: 2em;
	font-size: 80%;
	border-radius: 0;
}

/* pagelist --------------------------------------------------------------- */

.x-pagelist {
	display: flex;
	flex-flow: column;
	min-height: 0;  /* don't let the content make the pagelist itself overflow */
}

.x-pagelist[tabs_side=left ],
.x-pagelist[tabs_side=right] {
	flex-flow: row;
}

.x-pagelist[tabs_side=left ] > .x-pagelist-header,
.x-pagelist[tabs_side=right] > .x-pagelist-header {
	flex-flow: column;
}

.x-pagelist-header {

	/* layouting */
	display: flex;
	flex-flow: wrap;
	position: relative;

	/* styling */
	border: 0px solid var(--x-border-light);
	background-color: var(--x-faint);

}

.x-pagelist[tabs_side=top   ] > .x-pagelist-header { border-bottom-width : 1px; }
.x-pagelist[tabs_side=bottom] > .x-pagelist-header { border-top-width    : 1px; }
.x-pagelist[tabs_side=left  ] > .x-pagelist-header { border-right-width  : 1px; }
.x-pagelist[tabs_side=right ] > .x-pagelist-header { border-left-width   : 1px; }

.x-pagelist-content {
	display: grid;
	flex: 1;
	min-height: 0;  /* don't let the content make the pagelist itself overflow */
	overflow: auto;
}

.x-pagelist[tabs_side=top   ],
.x-pagelist[tabs_side=left  ] > .x-pagelist-header { order: 0; }

.x-pagelist[tabs_side=bottom],
.x-pagelist[tabs_side=right ] > .x-pagelist-header { order: 1; }

.x-pagelist-tab {
	position: relative;
	line-height: 1.25em;
	color: var(--x-fg-label);
	cursor: default;
	display: flex;
}

.x-pagelist-title {
	padding: .5em 1em;
	text-overflow: ellipsis;
	overflow: hidden;
	max-width: 10em;
}

.x-pagelist-add-button {
	padding: .25em 1em;
	display: flex;
	align-items: center;
}

.x-pagelist-add-button::before {
	font-size: 80%;
}

.x-pagelist-xbutton {
	position: absolute;
	top: 2px;
	right: 2px;
	font-size: 70%;
	color: var(--x-fg-disabled);
	cursor: default;
}

.x-pagelist-xbutton:hover {
	color: inherit;
}

.x-pagelist-selection-bar {
	position: absolute;
	background-color: var(--x-bg-pagelist-bar);
	z-index: 2;  /* selection-bar = 2, moving-tab = 1 */
	width: 2px;
	height: 2px;
}

.x-pagelist:not(.moving) > .x-pagelist-header > .x-pagelist-selection-bar {
	transition: width .15s, height .15s, left .15s, top .15s;
}

.x-pagelist-tab.moving {
	z-index: 1;  /* selection-bar = 2, moving-tab = 1 */
	opacity: .7;
}

.x-pagelist.moving > .x-pagelist-header > .x-pagelist-tab:not(.moving) {
	transition: left .1s, top .1s;
}

.x-pagelist-tab.selected {
	color: inherit;
}

.x-pagelist-tab:focus {
	outline: none;
}

.x-pagelist-tab:hover,
.x-pagelist-tab:focus {
	background-color: var(--x-faint);
}

/* split ------------------------------------------------------------------ */

.x-split {
	/* layouting */
	display: flex;
	flex-wrap: nowrap;
	align-items: stretch;
	align-content: stretch;
	justify-content: stretch;
}
.x-split[orientation=horizontal] { flex-direction: row; }
.x-split[orientation=vertical] { flex-direction: column; }

.x-split[orientation=horizontal].resize { flex-direction: row; cursor: ew-resize; }
.x-split[orientation=vertical].resize { flex-direction: column; cursor: ns-resize; }

.x-split-pane {
	display: grid;
	min-width : 0;    /* content can't overflow the split-view */
	min-height: 0;    /* content can't overflow the split-view */
	overflow: auto;
}

.x-split-pane-auto {
	flex-grow: 1;  /* expand-to-fit container */
	flex-basis: 0; /* completely obey fixed pane size */
}

.x-split[orientation=horizontal] > .x-split-pane.collapsed {
	min-width: 0 !important;
	width: 0 !important;
}
.x-split[orientation=vertical] > .x-split-pane.collapsed {
	min-height: 0 !important;
	height: 0 !important;
}

/* sizer */

.x-split-sizer {

	/* layouting */
	display: flex;
	align-items: center;
	justify-content: center;

	min-width : 6px;
	min-height: 6px;

	/* styling */
	opacity: .8;
	background-color: var(--x-smoke);

}
.x-split[orientation=vertical] > .x-split-sizer { flex-direction: row; }
.x-split[orientation=horizontal] > .x-split-sizer { flex-direction: row; }

.x-split.resize > .x-split-sizer {
	opacity: 1;
	transition: opacity .2s;
}

/* grip */

.x-split-sizer::before {
	content: '';
	box-sizing: border-box;
	border: 1.25px var(--x-fg-disabled);
}

.x-split[orientation=horizontal] > .x-split-sizer::before {
	width: 4px;
	height: 24px;
	border-style: none solid;
}
.x-split[orientation=vertical] > .x-split-sizer::before {
	width: 24px;
	height: 4px;
	border-style: solid none;
}

/* cssgrid ---------------------------------------------------------------- */

.x-cssgrid {

	/* layout self */
	margin: 0;
	border: 0;

	/* layout items */
	display: grid;
	align-content: start;
	align-items: start;
	overflow: hidden;
}

/* guides */

.x-cssgrid-guide {
	position: absolute;
	align-self: stretch;
	justify-self: stretch;
	display: grid;
	overflow: visible;
	z-index: 1; /* span = 3, overlay = 2, guide = 1 */
}

.x-cssgrid-guide[axis=x] { left: 0; width : 0; height: 100%; justify-self: end; border-right-width : 1px; }
.x-cssgrid-guide[axis=y] { top : 0; height: 0; width : 100%; align-self  : end; border-bottom-width: 1px; }

/* guide tips */

.x-cssgrid-tip {
	grid-area: 1 / 1;
	width: 0;
	border-color: #04a;
}

.x-cssgrid-tip:hover {
	border-color: #28f;
}

.x-cssgrid-tip[axis=x] {
	align-self: start;
	cursor: ew-resize;
	transform: scale(1, 2);
}

.x-cssgrid-tip[axis=y] {
	cursor: ns-resize;
	transform: scale(2, 1);
}

/* guide labels */

.x-cssgrid-label {
	grid-area: 1 / 1;
	justify-self: start;
	align-self: start;
	font-size: 75%;
	color: #333;
	cursor: pointer;
}

.x-cssgrid-label[axis=x] { margin: 3px -6px; transform: translate(-100%, 0); }
.x-cssgrid-label[axis=y] { margin: -3px 5px; transform: translate(0, -100%); }

/* span outlines */

.x-cssgrid-span {
	justify-self: stretch;
	align-self: stretch;
	border: 1px dotted var(--x-fg-disabled);
	pointer-events: none;
	position: relative;
	z-index: 3; /* span = 3, overlay = 2, guide = 1 */
}

.x-cssgrid-span-handle {
	pointer-events: all;
	position: absolute;
	width : 14px;
	height: 14px;
	padding: 5px;
	background-color: #888;
	background-clip: content-box;
}

.x-cssgrid-span-handle[side=top   ] { cursor: ns-resize; margin-top   : -5px; margin-left  : -7px; left: 50%; }
.x-cssgrid-span-handle[side=bottom] { cursor: ns-resize; margin-bottom: -7px; margin-left  : -7px; left: 50%; bottom: 0; }
.x-cssgrid-span-handle[side=left  ] { cursor: ew-resize; margin-left  : -6px; margin-top   : -7px; top : 50%; }
.x-cssgrid-span-handle[side=right ] { cursor: ew-resize; margin-right : -6px; margin-top   : -7px; top : 50%; right: 0; }

/* item overlays */

.x-cssgrid-item-overlay {
	background-color: #00000011;
	z-index: 2; /* span = 3, overlay = 2, guide = 1 */
}

.x-cssgrid-item-overlay.focused {
	background-color: #0000ff11;
}

.x-cssgrid-item-ph {
	/* enable this for debugging: */
	border: 1px dashed #aaa;
}

.x-cssgrid-moving { cursor: move; }

.x-cssgrid-span-move { border-color: #2a4; }
.x-cssgrid-span-move > .x-cssgrid-span-handle { background-color: #2a4; }

/* add button */

.x-cssgrid-add-button {
	position: absolute;
	color: var(--x-fg-disabled);
}

/* form ------------------------------------------------------------------- */

.x-form {

	/* layout self */
	margin: 0;
	border: 0;

	/* layout items */
	display: grid;
	align-content: start;
	align-items: start;
	overflow: hidden;
	overflow-y: auto;

	grid-template-columns : repeat(auto-fit, minmax(0, 1fr));

}

.x-form.compact {
	outline: 1px solid var(--x-border-light);
	outline-offset: -1px;
	margin: var(--x-margin);
	font-size: 90%;
}

.x-form.compact > h1,
.x-form.compact > h2,
.x-form.compact > h3
{
	display: none;
}

.x-form.compact > .x-widget:not(.x-input),
.x-form.compact > .x-input > .x-widget
{
	margin: 0;
	border-radius: 0;
	border: 1px solid var(--x-border-light);
	margin-top  : -1px;
	margin-left : -1px;
}

/* toaster ---------------------------------------------------------------- */

.x-toaster {
	display: none;  /* don't mess up the layout */
}

.x-notify-toaster {
	position: fixed;
	transition: top .2s;
}

/* dialog ----------------------------------------------------------------- */

.x-dialog {
	display: flex;
	flex-flow: column;
	padding: 1em 1em;
	color: var(--x-fg);
}

.x-dialog-title {
	color: var(--x-fg-disabled);
	font-size: 200%;
	font-weight: bold;
	margin: .25em 0;
}

.x-dialog {
	background-color: var(--x-bg-popup);
	border-radius: calc(var(--x-border-radius) * 2);
	margin: 20px;
	border: 0;
	box-shadow: var(--x-shadow-dialog);
}

.x-dialog-xbutton {
	position: absolute;
	right: 8px;
	top: 0px;
	border-bottom-right-radius: var(--x-border-radius);
	border-bottom-left-radius : var(--x-border-radius);
	border: 1px solid var(--x-border-light);
	border-top: 0;
	width: 52px;
	height: 18px;
	display: flex;
	align-items: center;
	justify-content: center;
	color: var(--x-fg-inverted);
	-webkit-text-stroke: 1px var(--x-stroke-dialog-xbutton);
	background-color: var(--x-bg-button);
}

.x-dialog-xbutton:hover,
.x-dialog-xbutton.active
{
	background-color: var(--x-bg-error);
}

.x-dialog-header {
}

.x-dialog-header,
.x-dialog-footer,
.x-dialog-content {
	display: flex;
	padding: 1em 0;
}

.x-dialog-content {
	flex: auto;
}

.x-dialog-footer {
	justify-content: flex-end;
}

/* toolbox ---------------------------------------------------------------- */

.x-toolbox {

	/* layout self */
	z-index: 1; /* menu = 4, picker = 3, tooltip = 2, toolbox = 1 */

	/* layout content */
	display: flex;
	flex-flow: column;
	overflow: auto;

	/* styling */
	background-color: var(--x-bg-popup);

	/* pinning */
	opacity: .2;
	transition: opacity .5s;

	border: 0;
	border-radius: var(--x-border-radius);
	box-shadow: var(--x-shadow-toolbox);
}

.x-toolbox.popup {
	position: fixed !important;
}

.x-toolbox.pinned,
.x-toolbox:hover {
	opacity: 1;
	transition: opacity 0s;
}

.x-toolbox-titlebar {
	display: flex;
	align-items: baseline;
	font-weight: bold;
	font-size: 12px;
	line-height: 2.2em;
	background-color: var(--x-toolbox-titlebar-bg);
	cursor: move;
	padding: 0 0 0 .5em;
}

.x-toolbox:focus-within > .x-toolbox-titlebar {
	background-color: var(--x-toolbox-titlebar-bg-focused);
}

.x-toolbox-title {
	flex: auto;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
	pointer-events: none;
}

.x-toolbox-button {
	color: var(--x-fg-disabled);
	flex: 0;
	padding: .5em .5em;
	cursor: default;
}

.x-toolbox-button-pin {
	font-size: 85%;
}

.x-toolbox.pinned > .x-toolbox-titlebar > .x-toolbox-button-pin {
	color: var(--x-fg-label);
}

.x-toolbox-button-close:hover {
	color: var(--x-fg);
}

.x-toolbox-content {
	flex: 1;
	min-width : 0;    /* content can't overflow the toolbox */
	min-height: 0;    /* content can't overflow the toolbox */
	overflow: auto;
	display: grid;
}

/* toolbox resizing by dragging the margins */

.x-toolbox-resize-overlay {
	position: absolute;
	left: 0; top: 0; right: 0; bottom: 0;
	clip-path: polygon(
		0 0, 0 100%, 100% 100%, 100% 0, 0 0, /* outer rect, counter-clockwise */
		5px 5px, calc(100% - 5px) 5px, calc(100% - 5px) calc(100% - 5px), 5px calc(100% - 5px), 5px 5px /* inner rect, clockwise */
	);
}

.x-toolbox-resize-overlay[hit_side=top      ], .x-toolbox-resize-overlay[hit_side=bottom      ] { cursor: ns-resize  ; }
.x-toolbox-resize-overlay[hit_side=left     ], .x-toolbox-resize-overlay[hit_side=right       ] { cursor: ew-resize  ; }
.x-toolbox-resize-overlay[hit_side=top_left ], .x-toolbox-resize-overlay[hit_side=bottom_right] { cursor: nwse-resize; }
.x-toolbox-resize-overlay[hit_side=top_right], .x-toolbox-resize-overlay[hit_side=bottom_left ] { cursor: nesw-resize; }

/* items switcher --------------------------------------------------------- */

.x-widget-switcher {
	display: grid;
}

/* slides ----------------------------------------------------------------- */

.x-slides {
	margin: 0;
	border: 0;
	display: grid;
}

.x-slide {
	grid-column-start: 1;
	grid-row-start: 1;

	opacity: 0;
	transition: opacity .2s;
}

.x-slide:not(.x-slide-selected),
.x-slide:not(.x-slide-selected) *
{
	pointer-events: none !important;
}

.x-slide-selected {
	opacity: 1;
	pointer-events: all;
	transition: opacity .2s;
}

/* mustache --------------------------------------------------------------- */

.x-mu {
	border: 0;
	margin: 0;
}

/* x-nav ------------------------------------------------------------------ */

.x-loading-overlay {
	padding: .5em;
}

.x-loading-overlay.error {
	background-color: var(--x-smoke);
}

.x-loading-overlay-message {
	padding: 1em 1em;
	background-color: var(--x-bg-popup);
	box-shadow: var(--x-shadow-tooltip);
}

.x-loading-overlay-message .x-button {
	line-height: 1em;
}

.x-loading-overlay-detail {
	font-family: monospace;
	margin: 1em 0;
}

.x-loading-error-icon {
	margin: 0 .5em;
	color: var(--x-fg-error);
}

/* grid ------------------------------------------------------------------- */

.x-grid {
	display: flex;
	flex-flow: column;
	overflow: hidden;          /* hide header overflow */
	cursor: default;           /* don't show caret over text */
	--header-height: 3.4em;
}

.x-vgrid {
	flex-flow: row;
}

.x-vgrid > .x-grid-action-band {
	flex-flow: column;
}

/* grid header */

.x-grid-header {
	position: relative;        /* make movable for scrolling horizontally */
	border-width: 0;
	border-color: var(--x-border-light);
	border-style: solid;
	border-bottom-width: 1px;
	min-height: calc(var(--header-height) + 1px);
}

.x-grid-header.with-filters {
	min-height: calc(var(--header-height) + 1px + .9em);
}

.x-vgrid > .x-grid-header {
	border-bottom-width: 0;
}

/* grid header & row cell common styles that make them align */

.x-grid-header-cell,
.x-grid-cell {
	position: relative;        /* qs-text is relative to it. */
	white-space: nowrap;       /* row height is fixed */

	/* sizing & styling */
	padding: var(--x-input-padding);
	border-right: 1px solid var(--x-faint);
	min-width: 20px;
}

/* grid header cells */

.x-grid-header-cell {
	height: 100%;
	font-family: x-widget-condensed, sans-serif;
	font-weight: bold;
}

.x-grid-header-cell {
	position: absolute;
}

.x-vgrid > .x-grid-header > .x-grid-header-cell {
	height: auto;
}

.x-hgrid > .x-grid-header > .x-grid-header-cell {
	height: 100%;
}

.x-grid-header-cell-table {
	width: 100%;               /* expand to fit column width */
	table-layout: fixed;       /* don't expand based on content */
}

.x-grid-header-title-td {
	padding: 0;
	overflow: hidden;          /* hide title under the sort icon */
	font-weight: bold;
}

.x-grid-header-sort-icon-td {
	padding: 0;
	width: 0;
	vertical-align: baseline;
}

.x-grid-header-sort-icon-td.sorted {
	width: 1.2em;              /* make space for it */
}

.x-grid-header-sort-icon-pri {
	padding-left: 2px;
	padding-right: 2px;
	font-size: 85%;
}

/* grid cells: grid > view > ct > (cells, editor) > cell */

.x-grid-cells-view {
	overflow-x: overlay;       /* show scrollbars as needed */
	overflow-y: scroll;        /* show scrollbars always */
	position: relative;        /* anchor rows div */
	flex: 1 0 0;               /* grow to fill container but ignore overflow */
	min-height: 0;
	display: grid;
}

.x-grid-cells-ct {
	grid-row-start: 1;
	grid-column-start: 1;
	overflow: hidden;          /* hide surplus bottom rows */
	position: relative;        /* activates `overflow: hidden` on abs. pos. child */
	z-index: 0;                /* stacking context for cell and editor */
}

.x-grid-cells {
	position: absolute;        /* keep at y=0 while scrolling */
}

.x-grid-cell {
	position: absolute; /* positioned in code */
	overflow: hidden;
	display: flex;       /* because vertical-align doesn't work with `position: absolute` */
	align-items: center; /* works as `vertical-align: middle` */
	border-bottom: 0px solid #eee;
	background-color: var(--x-bg); /* make opaque because it overflows other cells on hover */
}

.x-grid-cell:hover,
.x-grid-cell.focused {
	overflow: visible;
	z-index: 1; /* hover/focused = 1, moving = 1 */
	width: auto !important;
}

.x-grid-cell:hover {
	outline: 1px dotted var(--x-fg-label);
	outline-offset: -1px;
}

.x-grid-cell[align=center] { justify-content: center; }
.x-grid-cell[align=right]  { justify-content: flex-end; }

.x-grid-cell.x-grid-cell.row-invalid {
	outline: 2px solid var(--x-bg-error);
	outline-offset: -2px;
}

/* tree node indent */

.x-grid-cell-indent {
	display: inline-flex;
	align-items: center;
	justify-content: flex-end;
	font-size: 10px;
	width: 0;
	padding: 0 4px;
	height: 100%;
	color: var(--x-fg-disabled);
}

.x-grid-cell-indent:hover::before {
	color: #666;
}

.x-grid-cell.focused > .x-grid-cell-indent {
	color: #ccc;
}

.x-grid-cell.focused > .x-grid-cell-indent:hover::before {
	color: #eee;
}

/* quicksearch overlay text */

.x-grid-qs-text { /* child of x-grid-cell */
	position: absolute;
	top: 0;
	color: var(--x-fg-search);
	background-color: var(--x-bg-search) !important;
	z-index: 1; /* qs-text = 1 */
}

/* grid col moving */

.x-grid.col-moving {
	cursor: grabbing;
}

.x-grid-header-cell.col-moving,
.x-grid-cell.col-moving {
	background-color: #eee;
	opacity: .7;
	z-index: 1; /* hover/focused = 1, moving = 1 */
}

.x-grid.col-moving .x-grid-header-cell:not(.col-moving),
.x-grid.col-moving .x-grid-cell:not(.col-moving),
.x-grid.col-moving .grid-editor:not(.col-moving) {
	transition: top .1s, left .1s, right .1s;
}

/* grid row moving */

.x-grid-cell.row-moving {
	background-color: #eee;
	opacity: .7;
	z-index: 1; /* hover/focused = 1, moving = 1 */
}

.x-item.moving-parent-cell {
	background-color: var(--x-smoke);
}

/* grid col resizing */

/* NOTE: `col-resize` is almost invisible on a light background on Windows 7 */
.x-grid.col-resize {
	cursor: ew-resize;
}
.x-grid:not(.col-resize) .x-grid-header-cell {
	cursor: pointer; /* resizing area is underneath */
}

.x-grid-resize-guides {
	position: absolute;
	top: 0;
}

.x-grid-resize-guide {
	position: absolute;
	width: 0;
	margin-left: -1px;  /* TODO: see why this is needed and remove it */
	border-left: 1px dashed #aaa;
}

/* grid editing */

.x-grid-error {
	position: absolute;
}

.x-widget.grid-editor {

	/* layout self */
	position: absolute;
	width: min-content;
	margin: 0;
	border-radius: 0;
	z-index: 1; /* editor = 1, cells = default */

	/* style self */
	font-size: inherit;
	font-family: inherit;
	border: 0;
	background-color: var(--x-bg-grid-editor);
}

.x-widget.grid-editor,
.x-widget.grid-editor.open:not(.widget-selected),            /* specificity over x-dropdown */
.x-widget.grid-editor:focus-within:not(.widget-selected)     /* specificity over x-editbox */
{
	box-shadow: inset 2px 2px 6px -2px rgba(0,0,0,0.75);
}

.x-grid-cell.editing {
	visibility: hidden;
}

/* load/save progress bar */

.x-grid-progress-bar {
	position: absolute;
	top: calc(var(--header-height) - 2px);
	width: 0%;
	height: 2px;
	pointer-events: none;
}

.x-grid.loading > .x-grid-progress-bar {
	background-color: green;
}

.x-widget.x-grid.loading {
	opacity: 1;
}

.x-grid.loading > .x-grid-header,
.x-grid.loading > .x-grid-cells-view {
	opacity: .9;
}

/* grid action band */

.x-grid-action-band {
	border-top: 1px solid var(--x-border-light);
	background-color: var(--x-bg);
}

/* grid as picker */

.x-widget.x-grid.picker {
	min-height: 40px;
	max-height: 300px;
	max-width: 800px;
	resize: both;
}

.x-widget.x-grid.picker > .x-grid-cells-view {
	overflow-y: scroll;        /* show vert-scrollbars always when a picker */
}

/* TODO: grid filter dropdowns

.x-widget.x-grid-filter-dropdown {
	font-size: 85%;
	bottom: 0;
	left: 0;

	position: absolute;
	min-width: 0;
	border: 0;
	margin: 0;
	border-radius: 0;

	color: #36f;
}

.x-dropdown.x-grid-filter-dropdown.open {
	box-shadow: none;
}

.x-grid-filter-dropdown-grid {
	font-size: 90%;
}

*/

/* grid widget editing */

.x-widget.x-grid.widget-editing {
	outline: none; /* many edit modes, each marked in its own ways */
}

.x-grid-header-cell.editing.editing {
	outline: 2px dotted red;
	outline-offset: -2px;
	cursor: initial;
}

.x-grid-cells-view.editing > .x-grid-cells-ct {
	display: none;
}

/* editable richtext ------------------------------------------------------ */

.x-richtext {
	margin: 0;
	border: 0;
	display: block;
	overflow: auto;
}

.x-richtext-content {
	outline: none;
	overflow-y: auto;
	padding: 10px;
}

.x-richtext-actionbar {
	position: absolute;
	background-color: var(--x-bg-popup);
	border-bottom: 1px solid rgba(10, 10, 10, 0.1);
	display: flex;
}

.x-richtext-actionbar-embedded {
	position: initial;
	flex-wrap: wrap;
}

.x-richtext-button {
	color: inherit;
	font-size: inherit;
	background-color: var(--x-faint);
	border: 1px solid var(--x-border-light);
	cursor: pointer;
	height: 2em;
	outline: 0;
	width: 2em;
	display: flex;
	align-items: center;
	justify-content: center;
}

.x-richtext-button:not(:first-child) {
	border-left-width: 0;
}

.x-richtext-button:hover {
	background-color: var(--x-smoke);
}

.x-richtext-button:active {
	background-color: var(--x-fg-disabled);
}

.x-richtext-button.selected {
	box-shadow: var(--x-shadow-button-pressed);
	background-color: var(--x-fg-disabled);
	color: var(--x-fg-inverted);
}

/* image ------------------------------------------------------------------ */

.x-image {

	/* layout self */
	min-height: calc(var(--x-input-min-height) * 2 + var(--x-margin));

	/* styling */
	border-radius: var(--x-border-radius);
	background-color: #000;

	/* layout missing icon */
	display: flex !important; /* override fontawesome !important */
	justify-content: center;
	align-items: center;
	color: #888;

}

.x-image::before {
	font-size: 2em !important; /* override fontawesome !important */
}

.x-image.empty {
	background-color: var(--x-faint);
	color: var(--x-smoke);
}

.x-image-img {
	position: absolute;
	min-width: 0;
	min-height: 0;
	width: 100%;
	height: 100%;
	object-fit: contain;
}

.x-image-img:not(.loaded) {
	opacity: 0;
	transition: opacity .2s;
}

.x-image-img.loaded {
	opacity: 1;
	transition: opacity .1s;
}

.x-image-overlay {
	z-index: 2;
	position: absolute;
	left: 0; top: 0; right: 0; bottom: 0;
	display: grid;
	justify-items: end;
	align-items: end;
	opacity: .6;
}

.x-image-button {
	margin: .5em .15em;
	margin-top: 0;
	font-size: 200%;
	border-radius: 100%;
	color: black;
	background-color: white;
	width: 1.5em;
	height: 1.5em;
	padding-top: .2em;
	text-align: center;
	box-shadow: 0px 0px 3px black;
	cursor: pointer;
	opacity: .7;
}

.x-image-download-button {
	margin-right: .5em;
}

.x-image-overlay > * {
	visibility: hidden;
}

.x-image-overlay:hover > * {
	visibility: visible;
}

.x-image-overlay:hover::before {
	visibility: hidden;
}

.x-image-button[disabled] {
	opacity: .4;
}

.x-image-button:not([disabled]):hover {
	opacity: .9;
}

.x-image-button:not([disabled]):active {
	opacity: 1;
}

/* charts ----------------------------------------------------------------- */

.x-chart {
	padding: 1em;
	height: 100%;
	display: grid;
}

.x-chart-pie {
	position: absolute;
	border-radius: 50%;
	box-shadow: 2px 2px 6px #000000cc;
}

.x-chart-stack {
	display: flex;
	flex-flow: column;
}

.x-chart-stack-slice-ct {
	position: relative;
	display: flex;
}

.x-chart-stack-slice {
	width: 50px;
	margin-right: .5em;
}

.x-chart[shape=pie] .x-chart-label {
	position: absolute;
}

.x-chart-label {
	font-family: x-widget-condensed, sans-serif;
	font-weight: bold;
	color: var(--x-fg-label);
	line-height: 1;
	width: max-content;
	max-width: 7em;
}

/* countries listbox ------------------------------------------------------ */

.x-countries-listbox-row {
	display: flex;
}

.x-countries-listbox-flag-cell {
	min-height: 20px;
	min-width : 22px;
	display: flex;
	align-items: center;
	justify-content: start;
}

/* icons listbox ---------------------------------------------------------- */

.x-icons-listbox-item {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

.x-icons-listbox-icon {
	min-width : 20px;
}

/* xmodule stuff ---------------------------------------------------------- */

.x-dev-toolbox > .x-toolbox-titlebar,
.x-dev-toolbox .x-widget
{
	font-family: arial, sans-serif;
	font-size: 12px;
}

.x-inspector .fa-eye, .x-inspector .fa-chevron, .x-inspector .fa-chevron-right {
	font-size: 80%;
}

x-prop-layers-inspector > .x-grid-header {
	min-height: calc(2em + 1px);
}

x-prop-inspector .x-grid-cell:not(.focused):not(.selected):not(.invalid).modified {
	background-color: var(--x-row-bg-focused);
}

x-prop-inspector .x-grid-cell:not(.modified) {
	color: var(--x-fg-disabled);
}

/* model editor ----------------------------------------------------------- */

.x-modeleditor {
	display: inline-block;
}

.x-modeleditor > canvas {
	position: absolute;
	width: 100%;
	height: 100%;
	user-select: none;
}

.model-editor-dot {
	position: absolute;
	pointer-events: none;
	margin-left: -4px;
	margin-top : -4px;
	width : 8px;
	height: 8px;
	border: 1px solid black;
}

.model-editor-dot[snap=point] {
	border-radius: 100%;
	background-color: black;
}

.model-editor-dot[snap=line] {
	background-color: #ff00ff;
}

.model-editor-dot[snap=line_middle] {
	border-radius: 100%;
	background-color: #ffff00;
}

.model-editor-dot[snap=face] {
	transform: rotate(45deg);
	background-color: #ff00ff;
}

.model-editor-dot[snap=line_plane_intersection] {
	background-color: #00ffff;
}

.model-editor-dot[snap=ref_point] {
	border-radius: 100%;
	border-width: 1px;
	margin-left: -3px;
	margin-top : -3px;
	width : 6px;
	height: 6px;
	background-color: white;
	user-select: none;
}

.model-editor-dot-debug {
	position: absolute;
	pointer-events: none;
	padding: 0 .2em;
	background-color: white;
	font-family: sans-serif;
	font-size: 12px;
	user-select: none;
}

.model-editor-dot-debug-face  { background-color: #ccccff; }
.model-editor-dot-debug-point { background-color: #ffffff; }
.model-editor-dot-debug-line  { background-color: #ffffcc; }

.x-modeleditor-materials .x-grid-cell[field=thumbnail] {
	padding: 1px;
	border: 0;
}

/* ------------------------------------------------------------------------ */
/* dark theme                                                               */
/* ------------------------------------------------------------------------ */

[theme=dark] {

	--x-border-focused                :  #66a;
	--x-border-focused-button         :  #999;
	--x-border-focused-button-primary :  #5bde5b;

	/* copy-pasted from the light theme to re-evaluate `--x-border-*` vars */
	--x-shadow-focused                :  0    0    0   1px var(--x-border-focused);
	--x-shadow-focused-button         :  0    0    0px 1px var(--x-border-focused-button);
	--x-shadow-focused-button-primary :  0    0    0px 1px var(--x-border-focused-button-primary);

	--x-shadow-button-pressed         : inset 0 0.15em 0.5em #1b1f2377;

	--x-fg                   : #fff;
	--x-p                    : #bbb;
	--x-fg-inverted          : #fff;
	--x-bg                   : #151519;
	--x-bg-popup             : #26262c;
	--x-fg-disabled          : #ffffff66;
	--x-fg-disabled-inverted : var(--x-fg-disabled);
	--x-border-light         : #ffffff22;
	--x-smoke                : #ffffff22;
	--x-faint                : #ffffff11;
	--x-fg-label        : #aaa;
	--x-bg-new          : #2c2c5c;
	--x-bg-modified     : #196119;
	--x-bg-new-modified : #293b34;
	--x-fg-error        : #f66;

	--x-markbox-icon-color: #75b7fa;

	--x-bg-button: #565e62;

	--x-bg-select-button: var(--x-faint);

	--x-toolbox-titlebar-bg         : #303030;
	--x-toolbox-titlebar-bg-focused : #636363;

	--x-stroke-dialog-xbutton       : #000000cc;

	--x-bg-pagelist-bar: var(--x-fg);

	--x-selected-widget-outline-color         : #aaa;
	--x-selected-widget-outline-color-focused : var(--x-markbox-icon-color);

	/* these need to be opaque! */
	--x-item-bg-unfocused-selected : #3a3f42;
	--x-item-bg-unselected         : #1d2021;
	--x-item-bg-selected           : #15385c;
	--x-row-bg-focused             : #222;

	--x-bg-grid-editor: #495560;

	color: var(--x-fg);
}

body[theme=dark] {
	background-color: var(--x-bg);
}

/* dark widget on white body */
body:not([theme=dark]) [theme=dark] {
	background-color: var(--x-bg);

	--x-l-border-focused                :  #99d;
	--x-l-border-focused-button         :  #aab;
	--x-l-border-focused-button-primary :  #363;

	/* copy-pasted from the light theme to re-evaluate `--x-border-*` vars */
	--x-shadow-focused                :  0    0    0   1px var(--x-l-border-focused);
	--x-shadow-focused-button         :  0    0    0px 1px var(--x-l-border-focused-button);
	--x-shadow-focused-button-primary :  0    0    0px 1px var(--x-l-border-focused-button-primary);
}

[theme=dark]::-webkit-scrollbar,
[theme=dark] ::-webkit-scrollbar
{
	/* enable the lazy-work of custom-drawn scrollbars */
	width : initial;
	height: initial;
}

[theme=dark]::-webkit-scrollbar-corner,
[theme=dark] ::-webkit-scrollbar-corner
{
	background: var(--x-bg);
}

[theme=dark]::selection,
[theme=dark] ::selection
{
	color: #000;
	background-color: #ff0;
}

/* thin scrollbars option ------------------------------------------------- */

[thin-scrollbars]::-webkit-scrollbar,
[thin-scrollbars] ::-webkit-scrollbar
{
	/* enable the lazy-work of custom-drawn scrollbars */
	width : 8px;
	height: 8px;
}

[thin-scrollbars]::-webkit-scrollbar-thumb,
[thin-scrollbars] ::-webkit-scrollbar-thumb
{
	border-radius: 50px;
}

[thin-scrollbars]::-webkit-scrollbar-thumb:hover,
[thin-scrollbars] ::-webkit-scrollbar-thumb:hover
{
	background-color: var(--x-fg-disabled);
}

